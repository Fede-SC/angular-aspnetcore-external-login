{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/account.service.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/check-login-intializer.ts","webpack:///./src/app/home/home.component.css","webpack:///./src/app/home/home.component.html","webpack:///./src/app/home/home.component.ts","webpack:///./src/app/interceptor401.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { Injectable, Inject } from '@angular/core';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from '../environments/environment';\nimport { tap } from 'rxjs/operators';\nimport { DOCUMENT } from '@angular/common';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AccountService {\n  private _isUserAuthenticatedSubject = new BehaviorSubject<boolean>(false);\n  isUserAuthenticated: Observable<boolean> = this._isUserAuthenticatedSubject.asObservable();\n  \n  constructor(@Inject(DOCUMENT) private document: Document, private httpClient: HttpClient) { }\n\n  updateUserAuthenticationStatus(){\n    return this.httpClient.get<boolean>(`${environment.apiUrl}/home/isAuthenticated`, {withCredentials: true}).pipe(tap(isAuthenticated => {\n      this._isUserAuthenticatedSubject.next(isAuthenticated);\n    }));    \n  }\n\n  setUserAsNotAuthenticated(){\n    this._isUserAuthenticatedSubject.next(false);\n  }\n\n  login() {\n    this.document.location.href = \"http://localhost:5001/account/SignInWithGoogle\";\n  }\n\n  logout() {\n    this.document.location.href = \"http://localhost:5001/account/logout\";\n  }\n  \n}\n","module.exports = \"\"","module.exports = \"<!--The content below is only a placeholder and can be replaced.-->\\n<div class=\\\"text-center\\\">\\n  <h1>\\n    {{ title }}\\n  </h1>  \\n</div>\\n\\n<div class=\\\"container\\\">\\n  <router-outlet></router-outlet>\\n</div>\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'ASP.NET Core + Angular + Google Login Demo Project';\n\n}\n","import { HTTP_INTERCEPTORS, HttpClientModule } from '@angular/common/http';\nimport { APP_INITIALIZER, NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { AppComponent } from './app.component';\nimport { checkIfUserIsAuthenticated } from './check-login-intializer';\nimport { HomeComponent } from './home/home.component';\nimport { Interceptor401Service } from './interceptor401.service';\nimport { AccountService } from './account.service';\n\nconst routes: Routes = [\n  { path: '', component: HomeComponent }\n];\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HomeComponent\n  ],\n  imports: [\n    BrowserModule,\n    RouterModule.forRoot(routes),\n    HttpClientModule\n  ],\n  providers: [    \n    { provide: HTTP_INTERCEPTORS, useClass: Interceptor401Service, multi: true },\n    { provide: APP_INITIALIZER, useFactory: checkIfUserIsAuthenticated, multi: true, deps: [AccountService]}\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { of } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\n\nimport { AccountService } from './account.service';\n\n\nexport function checkIfUserIsAuthenticated(accountService: AccountService) {\n    return () => {\n        return accountService.updateUserAuthenticationStatus().pipe(catchError(_ => {\n            console.error('Error trying to validate if the user is authenticated. The most probable cause is that the ASP.NET Core project isn\\'t running');\n            return of(null);\n        })).toPromise();                    \n    };\n}","module.exports = \".margin-top-md {\\n    margin-top: 50px;\\n}\"","module.exports = \"<div class=\\\"row\\\">\\n  <div class=\\\"col-md-12 text-center\\\">\\n    <h3 *ngIf=\\\"isUserAuthenticated\\\">Hello {{userName}}</h3>\\n    <h3 *ngIf=\\\"!isUserAuthenticated\\\">Not authenticated</h3>\\n  </div>\\n</div>\\n\\n<div class=\\\"row margin-top-md\\\" *ngIf=\\\"isUserAuthenticated\\\">\\n  <div class=\\\"col-md-12 text-center\\\">\\n    <button class=\\\"btn btn-dark btn-lg\\\" (click)=\\\"logout()\\\">Logout</button>\\n  </div>\\n</div>\\n<div class=\\\"row margin-top-md\\\" *ngIf=\\\"!isUserAuthenticated\\\">\\n  <div class=\\\"col-md-12 text-center\\\">\\n    <button class=\\\"btn btn-primary btn-lg\\\" (click)=\\\"login()\\\">Login</button>\\n  </div>\\n</div>\\n<div class=\\\"row margin-top-md\\\">\\n  <div class=\\\"col-md-12 text-center\\\">\\n    <button class=\\\"btn btn-light btn-lg\\\" (click)=\\\"simulateFailedCall()\\\">Get a 401</button>\\n  </div>\\n</div>\\n\"","import { HttpClient, HttpErrorResponse } from '@angular/common/http';\nimport { Component, OnInit, OnDestroy } from '@angular/core';\n\nimport { AccountService } from '../account.service';\nimport { environment } from '../../environments/environment';\nimport { Subscription } from 'rxjs';\n\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit, OnDestroy {\n  isUserAuthenticated = false;\n  subscription: Subscription;\n  userName: string;\n\n  constructor(private httpClient: HttpClient, private accountService: AccountService) { }\n\n  ngOnInit() {\n    this.subscription = this.accountService.isUserAuthenticated.subscribe(isAuthenticated => {\n      this.isUserAuthenticated = isAuthenticated;\n      if (this.isUserAuthenticated) {\n        this.httpClient.get(`${environment.apiUrl}/home/name`, { responseType: 'text', withCredentials: true }).subscribe(theName => {\n          this.userName = theName;\n        });\n      }\n    });\n  }\n\n  ngOnDestroy() {\n    this.subscription.unsubscribe();\n  }\n\n  logout() {\n    this.accountService.logout();\n  }\n\n  simulateFailedCall() {\n    this.httpClient.get(`${environment.apiUrl}/home/fail`).subscribe();\n  }\n\n  login() {\n    this.accountService.login();\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpInterceptor, HttpHandler, HttpEvent, HttpRequest, HttpResponse, HttpErrorResponse } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { AccountService } from './account.service';\nimport { tap } from 'rxjs/operators';\n\n@Injectable()\nexport class Interceptor401Service implements HttpInterceptor {\n\n  constructor(private accountService: AccountService) { }\n\n  intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n\n    return next.handle(req).pipe(tap(null,\n      (error: HttpErrorResponse) => {        \n        if (error.status === 401)\n          this.accountService.setUserAsNotAuthenticated();\n      }));\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  apiUrl: 'http://localhost:5001/api'\n};\n\n/*\n * In development mode, for easier debugging, you can ignore zone related error\n * stack frames such as `zone.run`/`zoneDelegate.invokeTask` by importing the\n * below file. Don't forget to comment it out in production mode\n * because it will have a performance impact when errors are thrown\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}